{
	"info": {
		"_postman_id": "ab54b4b2-502e-45b2-b332-3e97b8f31882",
		"name": "testing create new user",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "create user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"response is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"var apiResponse = pm.response.text()",
							"pm.environment.set(\"apiToken\", apiResponse)",
							"",
							"pm.test(\"response matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(`\"lastName\" is required`);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\": \"adam\",\n\t\"password\": \"test\",\n\t\"firstName\": \"adam\",\n    \"lastName\": \"test\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/users",
					"host": [
						"{{url}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "create user with inappropriate password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"response is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"var apiResponse = pm.response.text()",
							"pm.environment.set(\"apiToken\", apiResponse)",
							"",
							"pm.test(\"response matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(`\"password\" with value \"test1234\" fails to match the required pattern: /^[a-zA-Z0-9]{3,6}$/`);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\": \"adam\",\n\t\"password\": \"test1234\",\n\t\"firstName\": \"adam\",\n\t\"lastName\": \"test\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/users",
					"host": [
						"{{url}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "create user  - local",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"response is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"response matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(`user created`);",
							"});",
							"",
							"console.log('something fromn tests')"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// set the body as json",
							"const body = {",
							"\t\"username\": \"adam2\",",
							"\t\"password\": \"test\",",
							"\t\"firstName\": \"adam\",",
							"    \"lastName\": \"test\"",
							"}",
							"",
							"// attach the body to the varaible: env/local",
							"// pm.environment.set(\"request_body\", JSON.stringify(body));",
							"pm.variables.set(\"request_body\", JSON.stringify(body));",
							"",
							"// how to display the body",
							"const requestBody = pm.variables.get(\"request_body\");",
							"console.log(requestBody)",
							"console.log(\"something here\")"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{request_body}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/users",
					"host": [
						"{{url}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "create user - access env variable",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{request_body}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/users",
					"host": [
						"{{url}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "create user - dynamic fields",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// set the userName as an constant ",
							"// const userName = 'testingBodyKeys'",
							"",
							"// const body = {",
							"// \t\"username\": `${userName}`,",
							"// \t\"password\": \"test\",",
							"// \t\"firstName\": \"adam\",",
							"//     \"lastName\": \"test\"",
							"// }",
							"",
							"// generate userName with use of faker",
							"const userName = pm.variables.replaceIn(\"{{$randomFirstName}}\")",
							"",
							"const body = {",
							"\t\"username\": `${userName}`,",
							"\t\"password\": \"test\",",
							"\t\"firstName\": \"adam\",",
							"    \"lastName\": \"test\"",
							"}",
							"",
							"pm.variables.set(\"request_body\", JSON.stringify(body));",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{request_body}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/users",
					"host": [
						"{{url}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "user has access to secure data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"  pm.test(\"response should be ok and have JSON body\", function () {",
							"      pm.response.to.be.ok;",
							"      pm.response.to.have.jsonBody();",
							"  });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{apiToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/employees",
					"host": [
						"{{url}}"
					],
					"path": [
						"employees"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"console.log('every request')"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "req_body",
			"value": ""
		},
		{
			"key": "request_body",
			"value": ""
		},
		{
			"key": "endpoint",
			"value": "login",
			"type": "string"
		}
	]
}